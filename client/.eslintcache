[{"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/index.js":"1","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/App.js":"2","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/reportWebVitals.js":"3","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/pages/SingleThought.js":"4","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/pages/Home.js":"5","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/pages/Profile.js":"6","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/pages/Signup.js":"7","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/pages/Login.js":"8","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/components/Header/index.js":"9","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/components/Footer/index.js":"10","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/utils/queries.js":"11","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/utils/mutations.js":"12","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/utils/auth.js":"13","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/components/CommentList/index.js":"14","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/components/ThoughtList/index.js":"15","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/components/CommentForm/index.js":"16","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/components/ThoughtForm/index.js":"17","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/components/config.js":"18","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/components/ImageComponent/ImageComp.js":"19","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/components/MoviesRow/MoviesRow.js":"20","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/pages/MoviePage.js":"21"},{"size":500,"mtime":1662834196699,"results":"22","hashOfConfig":"23"},{"size":2370,"mtime":1663030686942,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1662834196699,"results":"25","hashOfConfig":"23"},{"size":1562,"mtime":1662839943032,"results":"26","hashOfConfig":"23"},{"size":2231,"mtime":1663031458174,"results":"27","hashOfConfig":"23"},{"size":1724,"mtime":1662834196699,"results":"28","hashOfConfig":"23"},{"size":2658,"mtime":1662834196699,"results":"29","hashOfConfig":"23"},{"size":2503,"mtime":1663016793852,"results":"30","hashOfConfig":"23"},{"size":1308,"mtime":1662834196698,"results":"31","hashOfConfig":"23"},{"size":867,"mtime":1662834196698,"results":"32","hashOfConfig":"23"},{"size":908,"mtime":1662834196700,"results":"33","hashOfConfig":"23"},{"size":1077,"mtime":1662834196700,"results":"34","hashOfConfig":"23"},{"size":1043,"mtime":1662834196700,"results":"35","hashOfConfig":"23"},{"size":953,"mtime":1662834196698,"results":"36","hashOfConfig":"23"},{"size":1502,"mtime":1662834196699,"results":"37","hashOfConfig":"23"},{"size":2410,"mtime":1662834196698,"results":"38","hashOfConfig":"23"},{"size":3371,"mtime":1662839943031,"results":"39","hashOfConfig":"23"},{"size":294,"mtime":1663016780238,"results":"40","hashOfConfig":"23"},{"size":1034,"mtime":1663031521727,"results":"41","hashOfConfig":"23"},{"size":404,"mtime":1663031449140,"results":"42","hashOfConfig":"23"},{"size":110,"mtime":1663030574351,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1pedanj",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/index.js",[],["90","91"],"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/App.js",["92"],"import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport SingleThought from './pages/SingleThought';\nimport Profile from './pages/Profile';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport MoviePage from './pages/MoviePage';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n              <Route \n                path=\"/\"\n                element={<Home />}\n              />\n              <Route \n                path=\"/login\" \n                element={<Login />}\n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />}\n              />\n              <Route \n                path=\"/me\" \n                element={<Profile />}\n              />\n              <Route \n                path=\"/profiles/:username\" \n                element={<Profile />}\n              />\n              <Route \n                path=\"/movie/:movieId\" component={(MoviePage, false)}\n              />\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/reportWebVitals.js",[],"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/pages/SingleThought.js",[],"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/pages/Home.js",["93","94","95"],"import React, { useEffect, useState, initialState } from \"react\";\n// import { useQuery } from \"@apollo/client\";\nimport { API_URL, API_KEY, IMAGE_URL, BANNER_URL } from \"../components/config\";\nimport ImageComp from \"../components/ImageComponent/ImageComp\";\n// import Button from '@mui/material/Button';\nimport { Typography, Row } from \"antd\";\nimport MovieRow from \"../components/MoviesRow/MoviesRow\";\n// import Grid from '@mui/material/Grid';\n// import FormLabel from '@mui/material/FormLabel';\n// import FormControl from '@mui/material/FormControl';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import RadioGroup from '@mui/material/RadioGroup';\n// import Radio from '@mui/material/Radio';\n// import Paper from '@mui/material/Paper';\nconst { Title } = Typography;\n\nconst Home = () => {\n  const [state, SetState] = useState(initialState);\n  const [Movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetch(`${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`)\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(response);\n        setMovies(response.results);\n      });\n  }, []);\n  return (\n    <main>\n      <div>\n        {/* <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: \"1px dotted #1a1a1a\" }}\n        > */}\n        {Movies[0] && (\n          <ImageComp\n            image={`${BANNER_URL}${Movies[0].backdrop_path}`}\n            title={Movies[0].original_title}\n            text={Movies[0].overview}\n          />\n        )}\n      </div>\n\n      {/* </div> */}\n      <div style={{ width: \"70%\", margin: \"1rem auto\" }}>\n        <button className=\"btn btn-lg btn-light m-2\">Load More</button>\n        <hr />\n\n        <Row gutter={[16, 16]}>\n          {Movies &&\n            Movies.map((movie, index) => (\n              <React.Fragment key={index}>\n                <MovieRow\n                  image={\n                    movie.poster_path && `${IMAGE_URL}w500${movie.poster_path}`\n                  }\n                  movieId={movie.id}\n                />\n              </React.Fragment>\n            ))}\n        </Row>\n\n        {/* </div> */}\n\n                  \n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/pages/Profile.js",[],"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/pages/Signup.js",[],"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/pages/Login.js",[],"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/components/Header/index.js",[],"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/components/Footer/index.js",[],"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/utils/queries.js",[],"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/utils/mutations.js",[],"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/utils/auth.js",[],"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/components/CommentList/index.js",[],"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/components/ThoughtList/index.js",[],"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/components/CommentForm/index.js",["96"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/components/ThoughtForm/index.js",[],"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/components/config.js",[],"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/components/ImageComponent/ImageComp.js",[],"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/components/MoviesRow/MoviesRow.js",[],"/Users/mohamed/Documents/GitHub/Film-Finder-/client/src/pages/MoviePage.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":14,"column":8,"nodeType":"103","messageId":"104","endLine":14,"endColumn":21},{"ruleId":"101","severity":1,"message":"105","line":15,"column":9,"nodeType":"103","messageId":"104","endLine":15,"endColumn":14},{"ruleId":"101","severity":1,"message":"106","line":18,"column":10,"nodeType":"103","messageId":"104","endLine":18,"endColumn":15},{"ruleId":"101","severity":1,"message":"107","line":18,"column":17,"nodeType":"103","messageId":"104","endLine":18,"endColumn":25},{"ruleId":"101","severity":1,"message":"108","line":19,"column":15,"nodeType":"103","messageId":"104","endLine":19,"endColumn":19},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'SingleThought' is defined but never used.","Identifier","unusedVar","'Title' is assigned a value but never used.","'state' is assigned a value but never used.","'SetState' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]